1. Query the list of CITY names ending with vowels (a, e, i, o, u) from STATION. Your result cannot contain duplicates

SOLUTION


SELECT DISTINCT CITY
FROM STATION
WHERE CITY LIKE '%a'
OR CITY LIKE '%e'
OR CITY LIKE '%i'
OR CITY LIKE '%o'
OR CITY LIKE '%u';


2. Query the list of CITY names from STATION which have vowels (i.e., a, e, i, o, and u) as both their first and last characters. Your result cannot contain duplicates.

SOLUTION

SELECT DISTINCT CITY
FROM STATION
WHERE CITY REGEXP '^[aeiouAEIOU]'
AND CITY REGEXP '[aeiouAEIOU]$';

3. Query the list of CITY names from STATION that do not start with vowels. Your result cannot contain duplicates

SOLUTION

SELECT DISTINCT CITY 
FROM STATION
WHERE  CITY NOT REGEXP '^[aeiouAEIOU]'

4. Query the list of CITY names from STATION that do not end with vowels. Your result cannot contain duplicates

SOLUTION

SELECT DISTINCT CITY 
FROM STATION
WHERE  CITY NOT REGEXP '[aeiouAEIOU]$'

5. Query the list of CITY names from STATION that either do not start with vowels or do not end with vowels. Your result cannot contain duplicates.

SOLUTION

SELECT DISTINCT CITY
FROM STATION
WHERE  CITY NOT REGEXP '[aeiouAEIOU]$'
OR  CITY NOT REGEXP '^[aeiouAEIOU]';

6. Query the list of CITY names from STATION that do not start with vowels and do not end with vowels. Your result cannot contain duplicates.

SOLUTION

SELECT DISTINCT CITY
FROM STATION
WHERE  CITY NOT REGEXP '[aeiouAEIOU]$'
AND CITY NOT REGEXP '^[aeiouAEIOU]';

7. Query the Name of any student in STUDENTS who scored higher than 75. Order your output by the last three characters of each name.
If two or more students both have names ending in the same last three characters (i.e.: Bobby, Robby, etc.), secondary sort them by 
ascending ID.


SOLUTION

SELECT Name
FROM STUDENTS
WHERE Marks >75
ORDER BY RIGHT(name, 3), id;


NOTE: Pay close attention to the question, as more difficult challenges often require new functions to solve the problem.
      In this challenge, we used the RIGHT() function to extract the last three characters from the Name column. The sorting 
      process was done in two steps:
      1. Primary sort: We sorted the names based on the last three characters extracted using RIGHT(Name, 3).
      2. Secondary sort: If multiple names had the same last three characters, we sorted them by ID in ascending order.

8. Write a query that prints a list of employee names (i.e.: the name attribute) from the Employee table in alphabetical order.

SOLUTION

SELECT name
FROM Employee
ORDER BY name ASC;

9. Write a query that prints a list of employee names (i.e.: the name attribute) for employees in Employee having a salary 
   greater than $2000 per month who have been employees for less than 10 months. Sort your result by ascending employee_id.

SOLUTION

SELECT name
FROM Employee
WHERE salary > 2000
AND months <10
ORDER BY employee_id ASC;

NOTE: This exercise was a bit challenging the first time I selected the columns I used the asterisk(*) symbol 
      assuming that for me to filter the name with columns I have to include all columns. However, The SQL 
      engine processes the WHERE clause before the SELECT clause, which is why it “knows” about all the columns.

10. Query the greatest value of the Northern Latitudes (LAT_N) from STATION that is less than 137.2345
    Truncate your answer to 4 decimal places.

SOLUTION

SELECT ROUND(LAT_N,4)
FROM STATION
WHERE LAT_N <137.2345
ORDER BY LAT_N DESC
LIMIT 1;

11. Query the Western Longitude (LONG_W) for the largest Northern Latitude (LAT_N) in STATION that is 
less than 137.2345. Round your answer to 4 decimal places.

SOLUTION

SELECT ROUND(LONG_W, 4)
FROM STATION
WHERE LAT_N <137.2345
ORDER BY LAT_N DESC 
LIMIT 1;


12. Query the smallest Northern Latitude (LAT_N) from STATION that is greater 
    than 38.7780. Round your answer to  decimal  4 places.

SOLUTION

SELECT ROUND(LAT_N,4)
FROM STATION
WHERE LAT_N >38.7780
ORDER BY LAT_N ASC
LIMIT 1;


13. Query the Western Longitude (LONG_W)where the smallest Northern Latitude (LAT_N) in STATION 
    is greater than. Round your answer to  decimal places. 

SOLUTION 

SELECT ROUND(LONG_W,4)
FROM STATION
WHERE LAT_N >38.7780
ORDER BY LAT_N ASC
LIMIT 1 ;


14. 









